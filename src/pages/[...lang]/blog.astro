---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import ArticleCard from '../../components/ArticleCard.astro';

export const supportedLanguages = ['fr', 'en', 'it'] as const;
type SupportedLanguage = typeof supportedLanguages[number];

export interface Props {
  blogEntries: any[];
  currentLang: SupportedLanguage;
}

export async function getStaticPaths() {
  const allBlogEntries = await getCollection('blog');
  return supportedLanguages.map(lang => {
    const blogEntries = allBlogEntries.filter(entry => entry.slug.startsWith(`${lang}/`));
    return {
      params: { lang },
      props: { blogEntries, currentLang: lang as SupportedLanguage }
    };
  });
}

const { blogEntries, currentLang } = Astro.props;

// Traductions
const translations = {
  fr: { title: "Articles", noArticles: "Aucun article trouv√©." },
  en: { title: "Blog Posts", noArticles: "No articles found." },
  it: { title: "Articoli", noArticles: "Nessun articolo trovato." }
};

const t = translations[currentLang as SupportedLanguage];

---

<BaseLayout title={t.title} lang={currentLang} description={t.title}>
  <main class="container mx-auto px-4 py-12">
    <h2 class="text-4xl font-light mb-8 text-black text-center">
      {t.title}
    </h2>
     
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {blogEntries.length > 0 ? (
        blogEntries.map((entry) => {
          const slug = entry.slug.split('/').slice(1).join('/');
          return (
            <ArticleCard 
              article={entry}
              lang={currentLang}
              url={`/${currentLang}/blog/${slug}`}
            />
          );
        })
      ) : (
        <p class="text-dark-gray col-span-full text-center">{t.noArticles}</p>
      )}
    </div>
  </main>
</BaseLayout>