---
import { getEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { CheckCircle, Globe, Briefcase, Mic, Coffee, BookOpen } from 'astro-feather-icons';

export async function getStaticPaths() {
  return ['fr', 'en', 'it'].map(lang => ({ params: { lang } }));
}

const { lang } = Astro.params;
const profileEntry = await getEntry('profile', 'profile');
const profileData = profileEntry.data[lang] || profileEntry.data['fr']; // Use French as fallback

if (!profileData) {
  throw new Error(`Content not found for language: ${lang}`);
}

const {
  name,
  title,
  image,
  bio,
  specialties,
  languages,
  careerPath,
  conferences,
  publications
} = profileData;

// Translations
const translations = {
  fr: {
    specialties: "Domaines de prédilection",
    languages: "Langues",
    career: "Mon parcours",
    conferencesAndPublications: "Conférences et publications",
    conferences: "Conférences",
    publications: "Publications",
    with: "avec",
    inCollaborationWith: "En collaboration avec"
  },
  en: {
    specialties: "Areas of expertise",
    languages: "Languages",
    career: "My career",
    conferencesAndPublications: "Conferences and publications",
    conferences: "Conferences",
    publications: "Publications",
    with: "with",
    inCollaborationWith: "In collaboration with"
  },
  it: {
    specialties: "Aree di specializzazione",
    languages: "Lingue",
    career: "Il mio percorso",
    conferencesAndPublications: "Conferenze e pubblicazioni",
    conferences: "Conferenze",
    publications: "Pubblicazioni",
    with: "con",
    inCollaborationWith: "In collaborazione con"
  }
};

const t = translations[lang as keyof typeof translations];
---
<BaseLayout title={`${name} - ${title}`} description={title} lang={lang}>
  <div class="bg-white md:my-20">

  <div class="max-w-6xl mx-auto px-4 py-12">
    <div class="flex flex-col-reverse md:flex-row gap-12">
      <div class="md:w-2/3">
        <h1 class="text-4xl md:text-5xl font-light text-accent mb-8">{name}</h1>
        <h2 class="text-3xl font-light text-black mb-4">{title}</h2>
        {bio.map((paragraph) => (
          <p class="text-dark-gray mb-6">{paragraph}</p>
        ))}
        
        <h3 class="text-xl font-semibold text-black mb-3">{t.career}</h3>
        <ul class="space-y-2 mb-6">
          {careerPath.map((item) => (
            <li class="flex">
              <span class="font-semibold text-accent w-24 flex-shrink-0">{item.year}</span>
              <span class="text-dark-gray">{item.event}</span>
            </li>
          ))}
        </ul>
        
        <h3 class="text-xl font-semibold text-black mb-3">{t.languages}</h3>
        <p class="text-dark-gray mb-6">{languages}</p>
        
        <h3 class="text-xl font-semibold text-black mb-4">{t.conferences}</h3>
<ul class="space-y-2 mb-8">
  {conferences.map((conf) => (
    <li class="text-dark-gray flex items-start">
      <span class="text-accent mr-2 text-4xl">•</span> {conf}
    </li>
  ))}
</ul>
        
        <h3 class="text-xl font-bold text-black mb-3">{t.publications}</h3>
        <ul class="space-y-2">
          {publications.map((pub) => (
            <li class="text-dark-gray flex items-start">
              <span class="text-accent mr-2 text-4xl">•</span>
              <div>
                <span class="font-semibold">{pub.date}:</span> "{pub.title}", {pub.publisher}
                {pub.coAuthors && <span class="italic"> ({t.inCollaborationWith} {pub.coAuthors.join(', ')})</span>}
              </div>
            </li>
          ))}
        </ul>
      </div>
      
      <div class="md:w-1/3">
        <img src={image} alt={name} class="w-full rounded-lg shadow-lg mb-6">
      </div>
    </div>
  </div>
</div>
</BaseLayout>
