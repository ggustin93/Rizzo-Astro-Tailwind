---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import SEO from '../components/SEO.astro';
import '../styles/global.css';

// Définition des langues supportées
type SupportedLanguage = 'en' | 'fr' | 'it';
const supportedLanguages: SupportedLanguage[] = ['en', 'fr', 'it'];

// Définition du type pour la prop 'type'
type SEOType = 'article' | 'website' | undefined;

// Interface pour les props du composant
export interface Props {
  title: string;
  description: string;
  image?: string;
  keywords?: string;
  type?: SEOType;  // Mise à jour du type ici
  canonical?: string;
  lang?: string;
}

// Destructuration des props
const { 
  title, 
  description, 
  image, 
  keywords, 
  type = 'website', 
  canonical, 
  lang: propLang 
} = Astro.props;

const { pathname } = Astro.url;
const urlLang = pathname.split('/')[1];

// Utiliser la langue passée en prop si elle existe, sinon utiliser celle de l'URL
const rawLang = propLang || urlLang;

// Validation et définition de la langue actuelle
const currentLang: SupportedLanguage = supportedLanguages.includes(rawLang as SupportedLanguage) 
  ? rawLang as SupportedLanguage 
  : 'fr';

// URL principale du site
const mainSiteUrl = 'https://crizzo-avocate.be';

// Génération de l'URL canonique
const path = Astro.url.pathname;
const autoCanonical = new URL(path, mainSiteUrl).toString();
const finalCanonical = canonical || autoCanonical;
---

<!DOCTYPE html>
<html lang={currentLang}>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    <!-- Composant SEO -->
    <SEO
        title={title}
        description={description}
        canonical={finalCanonical}
        image={image}
        keywords={keywords}
        type={type}
        lang={currentLang}
    />
    
    <!-- Préchargement des polices -->
    <link rel="preload" href="/fonts/Synonym-Regular.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href="/fonts/Synonym-Regular.woff" as="font" type="font/woff" crossorigin="anonymous">
    
    <!-- Feuilles de style -->
    <link rel="stylesheet" href="/styles/tailwind.css">
    <link rel="stylesheet" href="/styles/global.css">
    
    <!-- Préconnexions -->
    <link rel="preconnect" href="https://app.cal.com">
    <link rel="preconnect" href="https://unpkg.com">
    
    <!-- Favicons et manifeste -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    

    
    <!-- Cal.com Script -->
    <script type="text/javascript">
    (function (C, A, L) {
      let p = function (a, ar) { a.q.push(ar); };
      let d = C.document;
      C.Cal = C.Cal || function () {
        let cal = C.Cal;
        let ar = arguments;
        if (!cal.loaded) {
          cal.ns = {};
          cal.q = cal.q || [];
          d.head.appendChild(d.createElement("script")).src = A;
          cal.loaded = true;
        }
        if (ar[0] === L) {
          const api = function () { p(api, arguments); };
          const namespace = ar[1];
          api.q = api.q || [];
          typeof namespace === "string" ? (cal.ns[namespace] = api) && p(api, ar) : p(cal, ar);
          return;
        }
        p(cal, ar);
      };
    })(window, "https://app.cal.com/embed/embed.js", "init");
    Cal("init", {origin:"https://cal.com"});

    Cal("ui", {
      styles: {branding: {brandColor: "#000000"}},
      hideEventTypeDetails: false,
      layout: "month_view"
    });
    </script>
</head>
<body class="bg-beige bg-svg-pattern">
    <div class="container mx-auto px-4">
        <Header currentLang={currentLang} />
        
        <main id="content">
            <slot />
        </main>
        
        <Footer currentLang={currentLang} />
    </div>
    
    <!-- Script for Cal.com -->
    <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      document.body.addEventListener('click', function(e) {
        if (e.target instanceof HTMLElement && e.target.hasAttribute('data-cal-link')) {
          Cal("ui", {
            styles: {branding: {brandColor: "#000000"}},
            hideEventTypeDetails: false,
            layout: "month_view"
          });
        }
      });
    });
    </script>

    <!-- Script pour l'amélioration de l'accessibilité -->
    <script is:inline>
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Tab') {
          document.body.classList.add('user-is-tabbing');
        }
      });

      document.addEventListener('mousedown', function() {
        document.body.classList.remove('user-is-tabbing');
      });
    </script>

    <!-- Script pour le chargement paresseux des images -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', function() {
        var lazyImages = [].slice.call(document.querySelectorAll("img.lazy"));

        if ("IntersectionObserver" in window) {
          let lazyImageObserver = new IntersectionObserver(function(entries, observer) {
            entries.forEach(function(entry) {
              if (entry.isIntersecting) {
                let lazyImage = entry.target;
                lazyImage.src = lazyImage.dataset.src;
                lazyImage.classList.remove("lazy");
                lazyImageObserver.unobserve(lazyImage);
              }
            });
          });

          lazyImages.forEach(function(lazyImage) {
            lazyImageObserver.observe(lazyImage);
          });
        }
      });
    </script>
</body>
</html>